// Name: Ryan Cleminson// Class: SDD// Date: 27/05/2017'~':/*LOGINS:USER: "a"PASS: "b"USER: "fdsbnfjlek"PASS: "Bumper1111"USER: "dsdsdsdsds"PASS: "lol"USER: "kopkopkopp"PASS: "poppop"USER: "Rockieroad"PASS: "planes"USER: "VortdBossy"PASS: "lollies"*/'~':/*****************************************                 Constant*****************************************/LET _arraysize = 100/*****************************************                   DIM*****************************************/BEGIN GLOBALSBEGIN RECORD ObjectRecDIM x1 AS SHORTDIM x2 AS SHORTDIM y1 AS SHORTDIM y2 AS SHORTDIM BarrelDir AS SHORTDIM BarrelMove AS STR255DIM BarrelActive AS BOOLEANDIM Level AS SHORTDIM LevelJumpAreaX AS SHORTEND RECORDBEGIN RECORD UserInfoDIM UsernameArray AS STR255DIM EnPassword AS STR255DIM DePassword AS STR255DIM HighScore AS LONGDIM Active AS BOOLEANEND RECORD DIM Image(_arraysize) AS HANDLE DIM Barrels(5) AS ObjectRecDIM Mario AS ObjectRecDIM User(11) AS UserInfoEND GLOBALS/*****************************************                   DATA*****************************************/'~'2//                Functions'~'2include "Tlbx MoreFilesX.incl"local fn ResourceImageToPICTHandle( imageName as CFStringRef, imageRect as ^rect ) as handle'~'1dim as GraphicsImportComponent gidim as ComponentResult         resultdim as PicHandle               pictH : pictH = NULLdim as CFURLRef                urldim as FSRef                   fsRefdim as FSSpec                  fsSpecdim as OSErr                   errdim as Boolean                 successurl = fn CFBundleCopyResourceURL( fn CFBundleGetMainBundle(), imageName, 0, 0 )long if ( url )success = fn CFURLGetFSRef( url, @fsRef )CFRelease( url )long if ( success )err = fn FSGetCatalogInfo( @fsRef, _kFSCatInfoNone, NULL, NULL, #fsSpec, NULL )long if ( err == _noErr )err = fn GetGraphicsImporterForFile( fsSpec, gi )long if ( err == _noErr )result = fn GraphicsImportGetAsPicture( gi, pictH )result = fn GraphicsImportGetBoundsRect( gi, #imageRect )err = fn CloseComponent( gi )end ifend ifend ifend ifend fn = (handle)pictH // User must dispose'~'2//             Loading Pics'~'2LOCAL FN LoadPictHDIM AS RECT RInclude resources "BarrelFall1.png"LET Image(1) = FN ResourceImageToPICTHandle(@"BarrelFall1.png",@R)Include resources "BarrelFall2.png"LET Image(2) = FN ResourceImageToPICTHandle(@"BarrelFall2.png",@R)Include resources "BarrelRoll1.png"LET Image(3) = FN ResourceImageToPICTHandle(@"BarrelRoll1.png",@R)Include resources "BarrelRoll2.png"LET Image(4) = FN ResourceImageToPICTHandle(@"BarrelRoll2.png",@R)Include resources "BarrelRoll3.png"LET Image(5) = FN ResourceImageToPICTHandle(@"BarrelRoll3.png",@R)Include resources "BarrelRoll4.png"LET Image(6) = FN ResourceImageToPICTHandle(@"BarrelRoll4.png",@R)Include resources "BarrelStack.png"LET Image(7) = FN ResourceImageToPICTHandle(@"BarrelStack.png",@R)Include resources "DonkeyCelebrate.png"LET Image(8) = FN ResourceImageToPICTHandle(@"DonkeyCelebrate.png",@R)Include resources "DonkeyCelebrate2.png"LET Image(9) = FN ResourceImageToPICTHandle(@"DonkeyCelebrate2.png",@R)Include resources "DonkeyCollect.png"LET Image(10) = FN ResourceImageToPICTHandle(@"DonkeyCollect.png",@R)Include resources "DonkeyHold.png"LET Image(11) = FN ResourceImageToPICTHandle(@"DonkeyHold.png",@R)Include resources "DonkeySend.png"LET Image(12) = FN ResourceImageToPICTHandle(@"DonkeySend.png",@R)Include resources "DonkyKongHeading.png"LET Image(13) = FN ResourceImageToPICTHandle(@"DonkyKongHeading.png",@R)Include resources "Flamer1.png"LET Image(14) = FN ResourceImageToPICTHandle(@"Flamer1.png",@R)Include resources "Flamer2.png"LET Image(15) = FN ResourceImageToPICTHandle(@"Flamer2.png",@R)Include resources "MarioClimbUp1.png"LET Image(16) = FN ResourceImageToPICTHandle(@"MarioClimbUp1.png",@R)Include resources "MarioClimbUp2.png"LET Image(17) = FN ResourceImageToPICTHandle(@"MarioClimbUp2.png",@R)Include resources "MarioClimbUp3.png"LET Image(18) = FN ResourceImageToPICTHandle(@"MarioClimbUp3.png",@R)Include resources "MarioJump.png"LET Image(19) = FN ResourceImageToPICTHandle(@"MarioJump.png",@R)Include resources "MarioPullUp.png"LET Image(20) = FN ResourceImageToPICTHandle(@"MarioPullUp.png",@R)Include resources "MarioRun1.png"LET Image(21) = FN ResourceImageToPICTHandle(@"MarioRun1.png",@R)Include resources "MarioRun2.png"LET Image(22) = FN ResourceImageToPICTHandle(@"MarioRun2.png",@R)Include resources "MarioStillLeft.png"LET Image(23) = FN ResourceImageToPICTHandle(@"MarioStillLeft.png",@R)Include resources "MarioStillRight.png"LET Image(24) = FN ResourceImageToPICTHandle(@"MarioStillRight.png",@R)Include resources "OilBarrel.png"LET Image(25) = FN ResourceImageToPICTHandle(@"OilBarrel.png",@R)Include resources "LevelFloorWhite.png"LET Image(26) = FN ResourceImageToPICTHandle(@"LevelFloorWhite.png",@R)Include resources "LevelFloor.png"LET Image(27) = FN ResourceImageToPICTHandle(@"LevelFloor.png",@R)Include resources "OilBarrel2.png"LET Image(28) = FN ResourceImageToPICTHandle(@"OilBarrel2.png",@R)Include resources "GameOver.png"LET Image(29) = FN ResourceImageToPICTHandle(@"GameOver.png",@R)Include resources "MarioRun3.png"LET Image(30) = FN ResourceImageToPICTHandle(@"MarioRun3.png",@R)Include resources "MarioRun4.png"LET Image(31) = FN ResourceImageToPICTHandle(@"MarioRun4.png",@R)Include resources "w-key.png"LET Image(32) = FN ResourceImageToPICTHandle(@"w-key.png",@R)Include resources "a-key.png"LET Image(33) = FN ResourceImageToPICTHandle(@"a-key.png",@R)Include resources "d-key.png"LET Image(34) = FN ResourceImageToPICTHandle(@"d-key.png",@R)END FN'~'2//             Login Interface'~'2LOCAL FN LoginInterfaceLONG COLOR (0*255), (0*255), (0*255), _FALSEBOX FILL 0,0 TO 1000,1000COLOR _zWhiteTEXT _helvetica, 50,_BoldBit%LONG COLOR (249*255), (205*255), (75*255), _TRUEPICTURE (150,60) - (850,200), Image(26)PRINT %(420,150) "LOGIN"LONG COLOR (0*255), (0*255), (0*255), _FALSECOLOR _zWhiteTEXT _helvetica, 20,0PRINT %(200,250) "Please enter the correct relevant login details then press enter to continue"LONG COLOR (39*255), (180*255), (246*255), _TRUEPRINT %(300,350) "USERNAME:"PRINT %(299,450) "PASSWORD:"COLOR _zWhitePEN 3PLOT 450,315 TO 700,315// UsernamePLOT 450,365 TO 700,365//PLOT 450,420 TO 700,420// PasswordPLOT 450,470 TO 700,470//PICTURE (50,325) - (250,475), Image(8)PICTURE (750,325) - (950,475), Image(9)LONG COLOR (0*255), (0*255), (0*255), _FALSEEND FN'~'2//                Decrypt'~'2LOCAL FN DecryptDIM index AS SHORTDIM Letter AS STR255DIM DeAscii AS SHORTDIM PassNumber AS SHORTLET index = 0FOR PassNumber = 1 TO 11 STEP 1FOR index = 1 TO 9 STEP 1LET Letter = MID$(User.EnPassword(PassNumber),index,1)IF Letter <> ""LET DeAscii = ASC(Letter) - 5LET User.DePassword(PassNumber) = User.DePassword(PassNumber) + CHR$(DeAscii)END IFNEXTNEXTEND FN'~'2//            LoginLogic'~'2LOCAL FN LoginLogic (LoginNum AS SHORT)DIM index AS SHORTDIM Letter AS STR255DIM DeAscii AS SHORTDIM PassNumber AS SHORTDIM UsernameGuess AS STR255DIM UsernameCheck AS BOOLEANDIM PasswordGuess AS STR255DIM PasswordCheck AS BOOLEANDIM Fpath AS FSSPECDIM LoginNum1 AS SHORTDIM LoginNum2 AS SHORTLET index = 1IF(Files$(_FSSPECOPEN, , "Input", @Fpath))OPEN "I", 1, @FpathWHILE index != 11READ #1, User.UsernameArray(index);10,User.EnPassword(index);9, User.Highscore(index)FN TRUNCATE (User.UsernameArray(index))FN TRUNCATE (User.EnPassword(index))FN TRUNCATE (User.Highscore(index))LET index = index + 1WENDEND IFCLOSE #1FN DecryptWINDOW 2, ,(0,0)-(500,500)FOR index = 1 TO 11 STEP 1PRINT User.UsernameArray(index) ,User.EnPassword(index),User.DePassword(index), User.Highscore(index)NEXTWINDOW 1LET UsernameCheck = _FALSELET PasswordCheck = _FALSEDOCLSFN LoginInterfaceLONG COLOR (0*255), (0*255), (0*255), _FALSECOLOR _zWhiteDOPRINT %(450,350),: INPUT UsernameGuessUNTIL UsernameGuess <> ""COLOR _zBlackFOR index = 0 TO 11IF UsernameGuess = User.UsernameArray(index)LET UsernameCheck = _TRUELET LoginNum1 = indexEND IFNEXTIF UsernameCheck = _FALSECOLOR _zRedTEXT _helvetica, 20,0PRINT %(200,250) "Please enter the correct relevant login details then press enter to continue"COLOR _zBlackEND IFUNTIL UsernameCheck = _TRUEDOCLSFN LoginInterfaceLONG COLOR (0*255), (0*255), (0*255), _FALSECOLOR _zWhiteDOPRINT %(450,455),: INPUT PasswordGuessUNTIL PasswordGuess <> ""COLOR _zBlackFOR index = 0 TO 11 STEP 1IF PasswordGuess = User.DePassword(index)LET PasswordCheck = _TRUELET LoginNum2 = indexEND IFNEXTIF LoginNum1 = LoginNum2LET User.Active(LoginNum1) = _TrueELSELET PasswordCheck = _FalseEND IFIF PasswordCheck = _FALSECOLOR _zRedTEXT _helvetica, 20,0PRINT %(200,250) "Please enter the correct relevant login details then press enter to continue"COLOR _zBlackEND IF'UNTIL PasswordCheck = _TRUEEND FN'~'2//            HELP'~'2LOCAL FN HelpDIM OPTION AS STR255CLSLONG COLOR (0*255), (0*255), (0*255), _FALSECOLOR _zBlackBOX FILL 0,0 TO 1000,1000COLOR _zWhitePICTURE (150,60) - (850,200), Image(26)TEXT _helvetica, 50,_BoldBit%LONG COLOR (78*255), (246*255), (161*255), _TRUEPRINT %(420,150) "HELP"LONG COLOR (0*255), (0*255), (0*255), _FALSECOLOR _zWhiteTEXT _helvetica, 20,0PICTURE (50,240) - (130,330), Image(4)PRINT %(120,230) "ENEMIES"PRINT %(180,260) "THE OIL BARREL"PRINT %(180,290) "ROLES ALONG EACH LEVEL "PRINT %(180,320) "CAUSES DEATH IF TOUCHED"PICTURE (30,380) - (130,490), Image(9)PRINT %(180,390) "DONKEY KONG"PRINT %(180,420) "PUSHES OIL BARRELS FROM THE TOP TO ROLL DOWN"PRINT %(180,450) "THROUGHS YOU DOWN 2 LEVELS IF TOUCHED"PRINT %(600,230) "YOUR CHARACTER"PICTURE (650,250) - (750,350), Image(21)PRINT %(200,530) "CONTROLS"PICTURE (120,550) - (190,620), Image(32)PRINT %(210,590) "W: JUMPING"PICTURE (120,640) - (190,710), Image(33)PRINT %(210,680) "A: MOVE LEFT"PICTURE (120,730) - (190,800), Image(34)PRINT %(210,770) "D: MOVE RIGHT"PRINT %(600,530) "HOW TO WIN"PRINT %(400,560) "YOU HAVE TO ACHIEVE THE HIGHEST SCORE POSSIBLE"PRINT %(420,590) "POINTS CAN ONLY BE ADDED BY GOING UP LEVELS,PRINT %(600,800) "PRESS ENTER TO CONTINUE"DOINPUT OPTIONUNTIL OPTION = ""END FN'~'2//            High Score'~'2LOCAL FN HighScore (LoginNum AS SHORT)DIM OPTION AS STR255DIM Last AS SHORTDIM Swapped AS BOOLEANDIM index AS SHORTDIM y AS SHORTCLSLONG COLOR (0*255), (0*255), (0*255), _FALSECOLOR _zBlackBOX FILL 0,0 TO 1000,1000COLOR _zWhitePICTURE (150,60) - (850,200), Image(26)TEXT _helvetica, 50,_BoldBit%LONG COLOR (78*255), (246*255), (161*255), _TRUEPRINT %(340,140) "HIGH SCORE"LONG COLOR (0*255), (0*255), (0*255), _FALSECOLOR _zWhiteTEXT _helvetica, 30,0PRINT %(300,250) "PRESS ENTER TO CONTINUE:"TEXT _helvetica, 40,0PRINT %(150,300) "USERNAME:"PRINT %(550,300) "SCORE:"LET y = 380TEXT _helvetica, 20,0FOR index = 1 TO 10 STEP 1LET y = y + 30PRINT %(150,y) User.UsernameArray(Index)PRINT %(550,y) User.Highscore(index)NEXTDO INPUT optionUNTIL option = ""END FN'~'2//            PAUSE'~'2LOCAL FN Pause(PauseOption AS BOOLEAN)DIM option AS SHORTCOLOR _zWhiteBOX FILL 275,100 TO 725,700COLOR _zBlackBOX FILL 285,110 TO 715,690LONG COLOR (39*255), (180*255), (246*255), _TRUETEXT _helvetica, 40,0LET option = 0PRINT %(375,200)"PAUSE MENU"PRINT %(375,330)"1.MAIN MENU"PRINT %(430,380)"2.HELP"PRINT %(400,430)"3.RETURN"DOPRINT %(400,480);: INPUT "Option: " optionUNTIL option = 1 OR option = 2 OR option = 3COLOR _zBlackIF option = 1LET PauseOption = 1END IFIF option = 2FN Help CLSLET PauseOption = 2END IFIF option = 3CLSLET PauseOption = 2END IFEND FN = PauseOption'~'2//            PrintLevels'~'2LOCAL FN PrintLevelsDIM x AS SHORTDIM y1 AS SHORTDIM y2 AS SHORTDIM index AS SHORTDIM counter AS SHORT//Floors'~'2LET x = 0LET y1 = 141LET y2 = 167FOR counter = 1 TO 6 STEP 1FOR index = 1 TO 8PICTURE (50+x,y1) - (150+x,y2), Image(27)LET x = x + 100NEXTIF counter Mod 2 = 1LET x = 100ELSELET x = 0END IFLET y1 = y1 + 120LET y2 = y2 + 120NEXTPICTURE (50+x,y1-120) - (150+x,y2-120), Image(27)END FN'~'2//            Roll Right'~'2LOCAL FN RollRightDIM index AS SHORTFOR index = 1 TO 5 STEP 1IF Barrels.BarrelDir(index) = 3LET Barrels.BarrelDir(index) = 4ELSEIF Barrels.BarrelDir(index)= 4LET Barrels.BarrelDir(index)= 5ELSEIF Barrels.BarrelDir(index)= 5LET Barrels.BarrelDir(index)= 6ELSEIF Barrels.BarrelDir(index)= 6LET Barrels.BarrelDir(index)= 3END IFEND IFEND IFEND IFNEXTEND FN '~'2//            Roll Left'~'2LOCAL FN RollLeftDIM index AS SHORTFOR index = 1 TO 5 STEP 1IF Barrels.BarrelDir(index) = 6LET Barrels.BarrelDir(index) = 5ELSE IF Barrels.BarrelDir(index)= 5LET Barrels.BarrelDir(index)= 4ELSE IF Barrels.BarrelDir(index)= 4LET Barrels.BarrelDir(index)= 3ELSE IF Barrels.BarrelDir(index)= 3LET Barrels.BarrelDir(index)= 6END IFEND IFEND IFEND IFNEXT END FN'~'2//            Change Role Direction'~'2LOCAL FN Drop(index AS SHORT)LET Barrels.y1(index) = Barrels.y1(index) + 120LET Barrels.y2(index) = Barrels.y2(index) + 120IF Barrels.BarrelMove(index) = "Right"LET Barrels.BarrelMove(index) = "Left"ELSE LET Barrels.BarrelMove(index) = "Right"END IFIF Barrels.y1(index) > 740LET Barrels.x1(index) = 160LET Barrels.y1(index) = 89LET Barrels.x2(index) = 200 LET Barrels.y2(index) = 141 END IFEND FN'~'2//            Move Barrel'~'2LOCAL FN MoveBarrel (x AS SHORT, index AS SHORT, GameSpeed AS SHORT) AS SHORTDIM option AS STR255DIM Count AS SHORTDIM DonkeyDropper AS SHORT//            Barrels'~'2LET DonkeyDropper = 11PICTURE (80,20) - (180,141), Image(DonkeyDropper)LET DonkeyDropper = 12PICTURE (80,20) - (180,141), Image(DonkeyDropper)IF Barrels.BarrelMove(index) = "Right"Color = _zBlackBOX FILL Barrels.x1(index), Barrels.y1(index) TO Barrels.x2(index), Barrels.y2(index)IF Barrels.x1(index) < 850LET Barrels.x1(index) = Barrels.x1(index) + xLET Barrels.x2(index) = Barrels.x2(index) + xELSE FN Drop(index)END IFPICTURE (Barrels.x1(index), Barrels.y1(index)) - (Barrels.x2(index), Barrels.y2(index)), Image(Barrels.BarrelDir(index))ELSEIF Barrels.BarrelMove(index) = "Left"Color = _zBlackBOX FILL Barrels.x1(index), Barrels.y1(index) TO Barrels.x2(index), Barrels.y2(index)IF Barrels.x1(index) > 125LET Barrels.x1(index) = Barrels.x1(index) - xLET Barrels.x2(index) = Barrels.x2(index) - xELSE FN Drop(index)END IFPICTURE (Barrels.x1(index), Barrels.y1(index)) - (Barrels.x2(index), Barrels.y2(index)), Image(Barrels.BarrelDir(index))END IFEND IFEND FN = GameSpeed'~'2//            Level UP'~'2LOCAL FN LevelUp (MarioSkin AS SHORT,DropBackArea AS SHORT)SELECT Mario.LevelCASE 1COLOR _zBlackBOX FILL Mario.x1, Mario.y1 TO Mario.x2, Mario.y2LET Mario.x1 = 800LET Mario.y1 = 569LET Mario.x2 = 840LET Mario.y2 = 621LET Mario.Level = 2LET Mario.LevelJumpAreaX = 150LET DropBackArea = 880PICTURE (Mario.x1,Mario.y1) - (Mario.x2,Mario.y2), Image(MarioSkin)CASE 2COLOR _zBlackBOX FILL Mario.x1, Mario.y1 TO Mario.x2, Mario.y2LET Mario.x1 = 160LET Mario.y1 = 449LET Mario.x2 = 200LET Mario.y2 = 501LET Mario.Level = 3LET Mario.LevelJumpAreaX = 880LET DropBackArea = 150PICTURE (Mario.x1,Mario.y1) - (Mario.x2,Mario.y2), Image(MarioSkin)CASE 3COLOR _zBlackBOX FILL Mario.x1, Mario.y1 TO Mario.x2, Mario.y2LET Mario.x1 = 800LET Mario.y1 = 329LET Mario.x2 = 840LET Mario.y2 = 381LET Mario.Level = 4LET Mario.LevelJumpAreaX = 150LET DropBackArea = 880PICTURE (Mario.x1,Mario.y1) - (Mario.x2,Mario.y2), Image(MarioSkin)CASE 4COLOR _zBlackBOX FILL Mario.x1, Mario.y1 TO Mario.x2, Mario.y2LET Mario.x1 = 160LET Mario.y1 = 209LET Mario.x2 = 200LET Mario.y2 = 261LET Mario.Level = 5LET Mario.LevelJumpAreaX = 880LET DropBackArea = 150PICTURE (Mario.x1,Mario.y1) - (Mario.x2,Mario.y2), Image(MarioSkin)CASE 5COLOR _zBlackBOX FILL Mario.x1, Mario.y1 TO Mario.x2, Mario.y2LET Mario.x1 = 800LET Mario.y1 = 89LET Mario.x2 = 840LET Mario.y2 = 141LET Mario.Level = 6LET Mario.LevelJumpAreaX = 150LET DropBackArea = 880PICTURE (Mario.x1,Mario.y1) - (Mario.x2,Mario.y2), Image(MarioSkin)END SELECTEND FN = DropBackArea'~'2//            Collision'~'2LOCAL FN CheckCollision(Collision AS BOOLEAN)DIM index AS SHORTFOR index = 1 TO 5IF Mario.y2 = Barrels.y2(index)IF Mario.x1 = Barrels.x1(index)LET Collision = _TrueEND IFIF Mario.x2 = Barrels.x1(index)LET Collision = _TrueEND IFIF Mario.x1 = Barrels.x2(index)LET Collision = _TrueEND IFIF Mario.x2 = Barrels.x2(index)LET Collision = _TrueEND IFEND IFNEXTEND FN = Collision'~'2//            GAMEOVER'~'2LOCAL FN GAMEOVERDIM option AS STR255CLSPICTURE (20,20) - (980,580), Image(29)COLOR _zRedTEXT _helvetica, 40,_BoldBit%PRINT %(200,500) "Please Press Enter To Continue"COLOR _zBlackDOINPUT optionUNTIL option = ""COLOR _zBlackTEXT _helvetica, 50,_BoldBit%END FN'~'2//            FallBackDown'~'2LOCAL FN CheckFallBackDown (DropBackArea AS SHORT, MarioSkin AS SHORT)DIM Level AS SHORTLET Level = Mario.level MOD 2IF Level = 0// Left (even levels) 150, right (odd levels) 880IF Mario.x2 >= DropBackAreaBOX FILL Mario.x1, Mario.y1 TO Mario.x2, Mario.y2LET Mario.x1 = 800LET Mario.y1 = Mario.y1 + 120LET Mario.x2 = 840LET Mario.y2 = Mario.y2 + 120LET Mario.Level = Mario.Level - 1LET DropBackArea = 150PICTURE (Mario.x1,Mario.y1) - (Mario.x2,Mario.y2), Image(MarioSkin)END IFELSEIF Mario.x1 <= DropBackAreaBOX FILL Mario.x1, Mario.y1 TO Mario.x2, Mario.y2LET Mario.x1 = 170LET Mario.y1 = Mario.y1 + 120LET Mario.x2 = 210LET Mario.y2 = Mario.y2 + 120LET Mario.Level = Mario.Level - 1LET DropBackArea = 880PICTURE (Mario.x1,Mario.y1) - (Mario.x2,Mario.y2), Image(MarioSkin)END IFEND IFEND FN'~'2//            Play'~'2LOCAL FN Play(GameOver AS BOOLEAN, LoginNum AS SHORT)DIM LowTime AS SHORTDIM GameSpeed AS SHORTDIM Lives AS SHORTDIM Leave AS STR255DIM Marker AS BOOLEANDIM option AS STR255DIM index AS SHORTDIM airtime AS BOOLEANDIM counterPic AS SHORTDIM x AS SHORTDIM y AS SHORTDIM BarrelCheck AS SHORTDIM timeinair AS SHORTDIM MarioSkin AS SHORTDIM JumpHeight AS SHORTDIM PrevLevel AS SHORTDIM UpLevelAchieved AS BOOLEANDIM ToGo AS SHORTDIM JumpAreaChange AS BOOLEANDIM OilSkin AS SHORTDIM Collision AS BOOLEANDIM Stoper1 AS SHORTDIM Stoper2 AS SHORTDIM DropBackArea AS SHORTDIM DonkeyDance AS SHORTDIM Level AS SHORTDIM Counter AS SHORTDIM PauseOption AS SHORTDIM PrintInterface AS BOOLEANDIM RePlay AS BOOLEANCLSFN PrintLevelsLET Marker = _FalseLET x = 0LET y = 0LET index = 1LET RePlay = _FalseLET GameSpeed = 5PICTURE (10,40)-(80,141), Image(7)PICTURE (-50,141)-(50,167), Image(27)//FOR index = 1 TO 5 STEP 1LET Barrels.BarrelActive(index) = _TrueLET Level = Level + 1SELECT LevelCASE 1LET Barrels.BarrelMove(index) = "Right"LET Barrels.BarrelDir(index) = 3LET Barrels.x1(index) = 800LET Barrels.y1(index) = 569LET Barrels.x2(index) = 840 LET Barrels.y2(index) = 621 PICTURE (Barrels.x1(index), Barrels.y1(index)) - (Barrels.x2(index), Barrels.y2(index)), Image(Barrels.BarrelDir(index))CASE 2LET Barrels.BarrelMove(index) = "Left"LET Barrels.BarrelDir(index) = 6LET Barrels.x1(index) = 160LET Barrels.y1(index) = 449LET Barrels.x2(index) = 200 LET Barrels.y2(index) = 501 PICTURE (Barrels.x1(index), Barrels.y1(index)) - (Barrels.x2(index), Barrels.y2(index)), Image(Barrels.BarrelDir(index))CASE 3LET Barrels.BarrelMove(index) = "Right"LET Barrels.BarrelDir(index) = 3LET Barrels.x1(index) = 800LET Barrels.y1(index) = 329LET Barrels.x2(index) = 840 LET Barrels.y2(index) = 381 PICTURE (Barrels.x1(index), Barrels.y1(index)) - (Barrels.x2(index), Barrels.y2(index)), Image(Barrels.BarrelDir(index))CASE 4LET Barrels.BarrelMove(index) = "Left"LET Barrels.BarrelDir(index) = 6LET Barrels.x1(index) = 160LET Barrels.y1(index) = 209LET Barrels.x2(index) = 200 LET Barrels.y2(index) = 261PICTURE (Barrels.x1(index), Barrels.y1(index)) - (Barrels.x2(index), Barrels.y2(index)), Image(Barrels.BarrelDir(index))CASE 5LET Barrels.BarrelMove(index) = "Right"LET Barrels.BarrelDir(index) = 3LET Barrels.x1(index) = 160LET Barrels.y1(index) = 89LET Barrels.x2(index) = 200 LET Barrels.y2(index) = 141 PICTURE (Barrels.x1(index), Barrels.y1(index)) - (Barrels.x2(index), Barrels.y2(index)), Image(Barrels.BarrelDir(index))END SELECTNEXTLET Mario.x1 = 160 LET Mario.y1 = 689LET Mario.x2 = 200 LET Mario.y2 = 741 LET Mario.Level = 1LET MarioSkin = 21//PICTURE (Mario.x1,Mario.y1) - (Mario.x2,Mario.y2), Image(MarioSkin)LET LowTime = 0LET index = 1LET airtime = _falseLET timeinair =0LET DonkeyDance = 8DOLET Stoper1 = 940LET x = 40LET BarrelCheck = 0IF airtime = _falseLET option = INKEY$END IFIF OilSkin = 25LET OilSkin = 28ELSELET OilSkin = 25END IFPICTURE (50,655)-(110,740), Image(OilSkin)IF Lowtime = 350IF Barrels.BarrelActive(1) = _FalseLET Barrels.BarrelActive(1) = _TrueELSEIF Barrels.BarrelActive(2) = _FalseLET Barrels.BarrelActive(2) = _TrueELSEIF Barrels.BarrelActive(3) = _FalseLET Barrels.BarrelActive(3) = _TrueELSEIF Barrels.BarrelActive(4) = _FalseLET Barrels.BarrelActive(4) = _TrueELSEIF Barrels.BarrelActive(5) = _FalseLET Barrels.BarrelActive(5) = _TrueEND IFEND IFEND IFEND IFEND IFLET Lowtime = 0END IFIF counterPic = 5IF Barrels.BarrelMove(index) = "Right"FN RollRightELSEIF Barrels.BarrelMove(index) = "Left"FN RollLeftEND IFEND IFLET counterPic = 0END IFSELECT CASE optionCASE "d"IF Mario.x2 <= Stoper1COLOR _zBlackBOX FILL Mario.x1, Mario.y1 TO Mario.x2, Mario.y2LET Mario.x1 = Mario.x1 + 20LET Mario.x2 = Mario.x2 + 20IF MarioSkin = 30LET MarioSkin = 31ELSELET MarioSkin = 30END IFPICTURE (Mario.x1,Mario.y1) - (Mario.x2,Mario.y2), Image(MarioSkin)END IFCASE "a"IF Mario.level = 1LET Stoper2 = 150ELSELET Stoper2 = 60END IFIF Mario.x1 >= Stoper2COLOR _zBlackBOX FILL Mario.x1, Mario.y1 TO Mario.x2, Mario.y2LET Mario.x1 = Mario.x1 - 20LET Mario.x2 = Mario.x2 - 20IF MarioSkin = 21LET MarioSkin = 22ELSELET MarioSkin = 21END IFPICTURE (Mario.x1,Mario.y1) - (Mario.x2,Mario.y2), Image(MarioSkin)END IFCASE "w"LET airtime = _trueEND SELECTLET JumpHeight = 50SELECT Mario.y2CASE > 622LET Mario.Level = 1LET Mario.LevelJumpAreaX = 880LET DropBackArea = 150CASE < 622 AND Mario.y2 > 502LET Mario.Level = 2LET Mario.LevelJumpAreaX = 150LET DropBackArea = 880CASE < 502 AND Mario.y2 > 382LET Mario.Level = 3LET Mario.LevelJumpAreaX = 880LET DropBackArea = 150CASE < 382 AND Mario.y2 > 262LET Mario.Level = 4LET Mario.LevelJumpAreaX = 150LET DropBackArea = 880CASE < 262 LET Mario.Level = 5LET Mario.LevelJumpAreaX = 880LET DropBackArea = 150END SELECTIF airtime = _TrueFLUSHWINDOWBUFFERLET timeinair = timeinair + 1IF timeinair = 5SELECT Mario.LevelCASE 1IF Mario.x2 > Mario.LevelJumpAreaXLET DropBackArea = FN LevelUp (MarioSkin,DropBackArea)LET JumpAreaChange = _TrueLET AirTime = _FalseELSECOLOR _zBlackBOX FILL Mario.x1, Mario.y1 TO Mario.x2, Mario.y2LET Mario.y1 = Mario.y1 - JumpHeightLET Mario.y2 = Mario.y2 - JumpHeightPICTURE (Mario.x1,Mario.y1) - (Mario.x2,Mario.y2), Image(MarioSkin)END IFCASE 2IF Mario.x2 < Mario.LevelJumpAreaXLET DropBackArea = FN LevelUp (MarioSkin,DropBackArea)LET JumpAreaChange = _TrueLET AirTime = _FalseELSECOLOR _zBlackBOX FILL Mario.x1, Mario.y1 TO Mario.x2, Mario.y2LET Mario.y1 = Mario.y1 - JumpHeightLET Mario.y2 = Mario.y2 - JumpHeightPICTURE (Mario.x1,Mario.y1) - (Mario.x2,Mario.y2), Image(MarioSkin)END IFCASE 3IF Mario.x2 > Mario.LevelJumpAreaXLET DropBackArea = FN LevelUp (MarioSkin,DropBackArea)LET JumpAreaChange = _TrueLET AirTime = _FalseELSECOLOR _zBlackBOX FILL Mario.x1, Mario.y1 TO Mario.x2, Mario.y2LET Mario.y1 = Mario.y1 - JumpHeightLET Mario.y2 = Mario.y2 - JumpHeightPICTURE (Mario.x1,Mario.y1) - (Mario.x2,Mario.y2), Image(MarioSkin)END IFCASE 4IF Mario.x2 < Mario.LevelJumpAreaXLET DropBackArea = FN LevelUp (MarioSkin,DropBackArea)LET JumpAreaChange = _TrueLET AirTime = _FalseELSECOLOR _zBlackBOX FILL Mario.x1, Mario.y1 TO Mario.x2, Mario.y2LET Mario.y1 = Mario.y1 - JumpHeightLET Mario.y2 = Mario.y2 - JumpHeightPICTURE (Mario.x1,Mario.y1) - (Mario.x2,Mario.y2), Image(MarioSkin)END IFCASE 5IF Mario.x2 > Mario.LevelJumpAreaXLET DropBackArea = FN LevelUp (MarioSkin,DropBackArea)LET JumpAreaChange = _TrueLET AirTime = _FalseELSECOLOR _zBlackBOX FILL Mario.x1, Mario.y1 TO Mario.x2, Mario.y2LET Mario.y1 = Mario.y1 - JumpHeightLET Mario.y2 = Mario.y2 - JumpHeightPICTURE (Mario.x1,Mario.y1) - (Mario.x2,Mario.y2), Image(MarioSkin)END IFEND SELECTEND IF'~'2IF timeinair = 10 AND JumpAreaChange <> _TrueLET option = inkey$IF Mario.y2 < 121LET RePlay = _TrueEND IFSELECT optionCASE"d"COLOR _zBlackBOX FILL Mario.x1, Mario.y1 TO Mario.x2, Mario.y2LET Mario.x1 = Mario.x1 + 120LET Mario.x2 = Mario.x2 + 120IF MarioSkin = 30LET MarioSkin = 31ELSELET MarioSkin = 30END IFPICTURE (Mario.x1,Mario.y1) - (Mario.x2,Mario.y2), Image(MarioSkin)CASE "a"COLOR _zBlackBOX FILL Mario.x1, Mario.y1 TO Mario.x2, Mario.y2LET Mario.x1 = Mario.x1 - 120LET Mario.x2 = Mario.x2 - 120IF MarioSkin = 21LET MarioSkin = 22ELSELET MarioSkin = 21END IFPICTURE (Mario.x1,Mario.y1) - (Mario.x2,Mario.y2), Image(MarioSkin)END SELECTLET option = "w"END IF'~'2IF timeinair = 15 AND JumpAreaChange <> _TrueCOLOR _zBlackBOX FILL Mario.x1, Mario.y1 TO Mario.x2, Mario.y2LET Mario.y1 = Mario.y1 + JumpHeightLET Mario.y2 = Mario.y2 + JumpHeightPICTURE (Mario.x1,Mario.y1) - (Mario.x2,Mario.y2), Image(MarioSkin)//LET timeinair = 0LET airtime = _falseEND IFIF timeinair > 15LET timeinair = 0LET airtime = _falseLET JumpAreaChange = _FalseEND IFEND IF'~'2IF counterPic = 4IF DonkeyDance = 8LET DonkeyDance = 9ELSE LET DonkeyDance = 8END IFPICTURE (80,20) - (180,141), Image(DonkeyDance)END IFIF Barrels.BarrelActive(index) = _TrueFN MoveBarrel (x,index,GameSpeed)END IFCollision = FN CheckCollision(Collision)FN CheckFallBackDown (DropBackArea,MarioSkin)LET LowTime = LowTime + GameSpeedLET counterPic = counterPic + 1LET index = index + 1FN PrintlevelsIF index = 6LET index = 1END IFIF LowTime = 900LET LowTime = 0END IFIF Collision = _TrueFN GAMEOVERLET GameOver = _TrueEND IFIF option = "p"LET PauseOption = FN Pause(PauseOption)IF PauseOption = 1LET GameOver = _TrueEND IFIF PauseOption = 2LET PrintInterface = _TrueEND IFEND IFIF PrintInterface = _TruePICTURE (10,40)-(80,141), Image(7)PICTURE (-50,141)-(50,167), Image(27)FN PrintLevelsPICTURE (50,655)-(110,740), Image(OilSkin)PICTURE (Mario.x1,Mario.y1) - (Mario.x2,Mario.y2), Image(MarioSkin)END IFUNTIL RePlay = _True OR GameOver = _TrueFOR index = 1 TO 11 STEP 1IF User.Active(index) = _TrueLET User.Highscore(index) = User.Highscore(index) + 100END IFNEXTCLSLET Replay = _FalseEND FN = GameOver'~'2//            Main Menu'~'2WINDOW 1, "DONKY KONG GAME", (0,0)-(1000,1000)DIM option AS SHORTDIM Highscore AS LONGDIM GameOver AS BOOLEANDIM LoginNum AS SHORTDIM Fpath AS FSSPECDIM index AS SHORTDIM Username AS STR255//LET LoginNum = 0FN LoadPictHLET LoginNum = FN LoginLogic(LoginNum)LET HighScore = 0DOCOLOR _zBlackLONG COLOR (0*255), (0*255), (0*255), _FALSEBOX FILL 0,0 TO 1000,1000PICTURE (100,50) - (900,300), Image(13)LONG COLOR (39*255), (180*255), (246*255), _TRUETEXT _helvetica, 30,0PRINT %(225,450) "1.PLAY"PRINT %(225,525) "2.HELP"PRINT %(600,450) "3.HIGHSCORE"PRINT %(600,525) "4.SAVE & QUIT"PRINT %(250,350);: INPUT "PRESS A NUMBER TO CONTINUE:" optionSELECT optionCASE 1DOLET GameOver = FN Play(GameOver,LoginNum)UNTIL GameOver = _TrueLET GameOver = _FalseCASE 2FN HelpCASE 3FN HighScore(LoginNum)END SELECTUNTIL option = 4 IF(Files$(_FSSPECSAVE, , "Donkey Kong Game Info", @Fpath))OPEN "O", 1, @FpathLET index = 1WHILE index != 11WRITE #1, User.UsernameArray(index);10,User.EnPassword(index);9, User.highscore(index)LET index = index + 1WENDEND IFCLOSE #1END